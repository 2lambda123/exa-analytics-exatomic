name: Branch

on:
  [pull_request, push]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  support-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(python cicd-matrix.py)"

  coverage-artifact-name:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.get-ref.outputs.ref }}
    steps:
      - id: get-ref
        run: |
          ref=${{ github.ref }}
          echo ${ref}
          echo "::set-output name=ref::${ref////-}"

  run-tests:
    needs: [ support-matrix, coverage-artifact-name ]
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(needs.support-matrix.outputs.matrix).os }}
        python-version: ${{ fromJson(needs.support-matrix.outputs.matrix).python-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements.dev.txt') }}
      - name: Install Dependencies
        run: |
          pip install --upgrade --upgrade-strategy eager -r requirements.txt -r requirements.dev.txt -e .
      - name: Run Tests
        uses: ./.github/workflows/run-tests
        with:
          coverage-artifact-name: code-coverage-report-code-coverage
      - name: Debug
        run: ls -la; pwd; export
      #- name: Run codacy-coverage-reporter
      #  if: (runner.os == 'Linux') && (matrix.python-version == '3.8')
      #  uses: codacy/codacy-coverage-reporter-action@v1
      #  with:
      #    project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      #    coverage-reports: coverage.xml

  codacy-coverage-reporter:
    runs-on: ubuntu-latest
    needs: [ run-tests, coverage-artifact-name ]
    if: ${{ always() }}
    name: codacy-coverage-reporter
    steps:
      #- uses: actions/checkout@v2
      #- name: Debug
      #  run: ls -la; pwd; export
      #- name: Run codacy-coverage-reporter
      #  uses: codacy/codacy-coverage-reporter-action@v1
      #  with:
      #    project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      #    coverage-reports: coverage.xml
      - name: Debug
        run: ls -la; pwd; export
      - name: Download Coverage Report
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report-code-coverage
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
