name: Branch

on:
  push:
    branches-ignore:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  support-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(python matrix.py)"

  run-tests:
    needs: support-matrix
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(needs.support-matrix.outputs.matrix).os }}
        python-version: ${{ fromJson(needs.support-matrix.outputs.matrix).python-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Set Up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
      - name: Install Dependencies
        uses: ./.github/workflows/install-dependencies
        with:
          requirements: requirements.txt,requirements.dev.txt
          conda-channel: conda-forge
      - run: python setup.py develop
      - name: Run Tests
        uses: ./.github/workflows/run-tests

  codacy-coverage-reporter:
    runs-on: ubuntu-latest
    needs: run-tests
    name: codacy-coverage-reporter
    steps:
      - name: Download Coverage Report
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report-${{ github.ref }}
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
